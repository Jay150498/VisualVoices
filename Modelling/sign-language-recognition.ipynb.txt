{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.6.5","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# importing libraries\n\n# skimage.transform is used for image processing. \nfrom skimage import transform\n# skimage.data is used for the testing of images\nfrom skimage import data\n# matplotlib is used for plotting / for data visualization\nimport matplotlib.pyplot as plt\n# os is for path\nimport os\n# numpy is used for the computation\nimport numpy as np\n# skimage.color is used for the color conversion i.e. manipulating the image\nfrom skimage.color import rgb2gray\n# getting random numbers\nimport random\"\n# for model creation \nimport tensorflow as tf ","metadata":{"_uuid":"edf73bdd5cc5995b73131d141ea9009e2bee4ad8","execution":{"iopub.status.busy":"2023-06-19T06:36:29.740531Z","iopub.execute_input":"2023-06-19T06:36:29.741051Z","iopub.status.idle":"2023-06-19T06:36:29.759317Z","shell.execute_reply.started":"2023-06-19T06:36:29.740973Z","shell.execute_reply":"2023-06-19T06:36:29.758360Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"# creating a function to read the images and their corresponding labels\ndef load_data(data_directory):\n    # Get a list of directories in the specified data directory\n    directories = [d for d in os.listdir(data_directory) \n                   if os.path.isdir(os.path.join(data_directory, d))]\n    # Initialize empty lists for storing labels and images\n    labels = []\n    images = []\n    \n    # Loop through each directory\n    for d in directories:\n        # Get the path to the label directory\n        label_directory = os.path.join(data_directory, d)\n        # Get a list of file names in the label directory\n        file_names = [os.path.join(label_directory, f) for f in os.listdir(label_directory)]\n        \n        # Loop through each file name\n        for f in file_names:\n            # Read the image using data.imread() and append it to the images list\n            images.append(data.imread(f))\n            # Get the ASCII value of the directory (label) and append it to the labels list\n            labels.append(ord(d))\n    \n    # Return the images and labels as output\n    return images, labels\n\n# Set the root path of the project\nROOT_PATH = \"../input/project\"\n# Specify the path to the training data directory\ntrain_data_directory = os.path.join(ROOT_PATH, \"train\")\n\n# Call the load_data function with the training data directory to load the images and labels\nimages, labels = load_data(train_data_directory)\n","metadata":{"_uuid":"a2e52490105b23471e687ed05d874ac42e2a950c","execution":{"iopub.status.busy":"2023-06-19T06:39:53.742835Z","iopub.execute_input":"2023-06-19T06:39:53.743160Z","iopub.status.idle":"2023-06-19T06:40:51.390332Z","shell.execute_reply.started":"2023-06-19T06:39:53.743120Z","shell.execute_reply":"2023-06-19T06:40:51.389523Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"# converting to numpy arrays for processing and manipulation\nimages_array = np.array(images)\nlabels_array = np.array(labels)\n\n# Print the number of `images`'s elements\nprint(\"Total number of images:\", images_array.size)\n\n# Count the number of labels\nprint(\"Total No of classes:\", len(set(labels_array)))\n\n# Convert the label values (ASCII values) to corresponding characters using list comprehension\nprint(\"Label Array: \", [chr(X) for X in set(labels)])","metadata":{"_uuid":"a5111596c4a5b298b75f9c3af6e9ca4bd600ca42","execution":{"iopub.status.busy":"2023-06-19T06:42:17.941480Z","iopub.execute_input":"2023-06-19T06:42:17.942292Z","iopub.status.idle":"2023-06-19T06:42:17.970271Z","shell.execute_reply.started":"2023-06-19T06:42:17.942225Z","shell.execute_reply":"2023-06-19T06:42:17.969222Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"Total number of images: 4852\nTotal No of classes: 24\nLabel Array:  ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y']\n","output_type":"stream"}]},{"cell_type":"code","source":"# Determine the (random) indexes of the images that you want to see\nhand_signs = [12, 45, 65, 35]\n\n# Fill out the subplots with the random images that you defined\nfor i in range(len(hand_signs)):\n    plt.subplot(1, 4, i+1)  # Create a subplot with 1 row, 4 columns, and the i+1 index\n    plt.axis('off')  # Turn off the axis ticks and labels\n    plt.imshow(images[hand_signs[i]])  # Display the image corresponding to the index\n    plt.subplots_adjust(wspace=0.5)  # Adjust the spacing between subplots\n\nplt.show()  # Show the figure with subplots","metadata":{"_uuid":"ce74edb175c3e788e084f7759d0182c7a72bad5f","execution":{"iopub.status.busy":"2023-06-19T06:43:56.782249Z","iopub.execute_input":"2023-06-19T06:43:56.782571Z","iopub.status.idle":"2023-06-19T06:43:57.096164Z","shell.execute_reply.started":"2023-06-19T06:43:56.782527Z","shell.execute_reply":"2023-06-19T06:43:57.095073Z"},"trusted":true},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"<matplotlib.figure.Figure at 0x7f9ef4e54978>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAXoAAABRCAYAAADcvG3RAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAIABJREFUeJzsvWmQbdlV5/fbe59z55wz3zzWq3o1\nSFSpNCEaIQEi2hhh2mDTGAdtDHZg2oIGMdmNCGgBlmVGS0xCoWYM2xHdRHcbGjDdDLJAAgsJoQlV\n1auqN7+XL+e88xn2Xv6wz3Tvy1d6RaDKRJEr48S9ee+59+6zztprr/Vfw1YiwiEd0iEd0iF9/pLe\n7wEc0iEd0iEd0ueWDhX9IR3SIR3S5zkdKvpDOqRDOqTPczpU9Id0SId0SJ/ndKjoD+mQDumQPs/p\nUNEf0iEd0iF9ntOhoj+kQzqkQ/o8p0NFf0iHdEiH9HlOh4r+kA7pkA7p85wOFf0hHdIhHdLnOQX7\nPQCAb/3Ot8rCwgLKhBgMtVoNUwsJlEYphdEarbPnxiDKoZRCYwCK9/J2Dvn/gH9NTb6fk4jCWosS\nMMbgXIpDis8V5zvB4f+3NkVEiu9LxfnfFEic9d+nFM45nPPvWXFYa3GpJUpi0jTll3/ix9TnnLH3\noO/9/reLMYZWp4PWmiAICHS55teDGhiFUv7I+amUxjmHzs41JgTAYQt+KKVQ2X1xypGxAGstofav\n24zHGlfw2aGL5/6w/vucIlWTr0F+75Ls9wWX+vdEgXOe34mzROOENE35pZ/8kX3h97d/9/dKs9mk\n1WqhVYDWGmNCjFEEQYBSquC9VgFB4M/JeZzfA6f8c6xDMj6KCOjsskShtH9NCbhcdBGSJKEWhAiu\nuE8u46NzDrLn1tpCZpXycyPnt3XZfXIWJ+UcsNbLfOyEJPKy/Qvv/Bf7wut3/vS7pNPpUK/XK7w1\nBQ+ttYRhWJzfqNVwWqEEREzB81w6rYZAFPE4otaoA5kwoxHrnydaCl7klKZpIcea7J6JkCp/b6y1\naMHrm4zfXrdYrBXI5kXkyu+x1n82SRJcOiaJUlJreceP/vP74vWBUPSNRgPnHLWaIVABxhiMMWi8\nYjeFovH/K2MQEYzyw8/fyyl/Xih3dbfj4t/LPufE/57OlIYrJ4T/vKAyRa+1Km6Ocw5DpuCK79DF\n+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\n"},"metadata":{}}]},{"cell_type":"code","source":"# Determine the (random) indexes of the images\nhand_signs = [300, 1250, 2650, 3000]\n\n# Fill out the subplots with the random images and add shape, min and max values\nfor i in range(len(hand_signs)):\n    plt.subplot(1, 4, i+1)\n    plt.axis('off')\n    plt.imshow(images[hand_signs[i]])\n    plt.subplots_adjust(wspace=0.5)\n    plt.show()\n    print(\"shape: {0}, min: {1}, max: {2}\".format(images[hand_signs[i]].shape, \n                                                  images[hand_signs[i]].min(), \n                                                  images[hand_signs[i]].max()))","metadata":{"_uuid":"59d08838e2212116b8d897a0d8a1d0f7392337b7","execution":{"iopub.status.busy":"2023-06-19T06:45:33.832814Z","iopub.execute_input":"2023-06-19T06:45:33.833235Z","iopub.status.idle":"2023-06-19T06:45:34.205078Z","shell.execute_reply.started":"2023-06-19T06:45:33.833157Z","shell.execute_reply":"2023-06-19T06:45:34.204024Z"},"trusted":true},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":"<matplotlib.figure.Figure at 0x7f9ef461a240>","image/png":"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\n"},"metadata":{}},{"name":"stdout","text":"shape: (480, 640, 3), min: 0, max: 255\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<matplotlib.figure.Figure at 0x7f9ef45d2198>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAGgAAABRCAYAAAA+aePEAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAFgVJREFUeJztnFusNNl1139r712X7j7378znbz7P\n/WLjGQfGToIjQgi2uATJTzyASBCKbAcJLCVAgoIVYRwhkkBssBEBx0KOEDxEefKLX3gCCSLkJAL5\nwRnNeIbMzDff/Vz7Ul1Ve+/Fw67q7nPmdr48kB7p/KXSOd1VXV21/3v919prrWpRVS6xvjB/0hdw\niXfHJUFrjkuC1hyXBK05Lglac1wStOa4JGjNcUnQmuOSoDXHJUFrDvcnfQEAf/+f/LJaa9nY2EBV\nKYoCZy2ZK2jbFpdbrM2w1mLFoALee8pyiGqLMQYrDpV0PhFZbNV0Tj4coKpYUWI3Jw0QMZxNdUUi\niogQY0SjR1XRmF4bY/ChQUQIIRBVkZA+qRpoYkjnU8X77rOqiCh1XRNjpG4b2rblG7/6JbnI2KwF\nQXmek2UZWZZhjME5hzVp8LIsIy8ywGCtRRQwgnMuEWNzSHtRAWMSAdZaALKtnCCJNKJHJb1vRbBZ\nQdOkAU+DGfDdIFtrMc4QYyQGFgQhcbFfAXwiIQTIbLrm4D3OLYc2hJY8zxNpF6JlibUgqBgOyLIM\nsRbrHMbatGm6PGsdIpIsqBv4HsZYnHNEASeJHBGLqmKMQRQkhkSuZMTlJzEK6gOuzBAxxChkkgEs\nZn8IAbVK0ERM3k2IEAIKqEnHaTC4zuJMN7lCSGRHAkbAqGBVyNzFWVoLgozNsC7HyNIyekuAbvZb\ng8kcBqV3nWkwHMY4rMjiWBGBlc/HJuCsRURwnbX0x5amXAyoMYaIUFVTssJRiMUTqdpA5tIxEoUm\nBmxnIbEjIYQWZ9PEUGPwsUW686o4CAFLkuegy2nyXlgPgkySknIwwBgWkmNtGuQYI1mepYGVpXyJ\nCLAksycnDfTy3GVZrhy//D5jzOIzqkqMkX//y7+EOb3B1uYVBCjLkj+8M+ULX/kybduCRpxznW8R\nAsmasixDY1xYnun820IaAdX4lsn3XlgLgjIxOOtwAipJxowxqE83Ls5ibWcZ3f4YI2KTzzLWLiwI\nAAuutyQRVC0hBJw1YNKgOWdTANINdgyBr/zSL2AP3+DKRsHVYkpWFMTQ8MITu/z6z36Ovb09cmN5\n8f4hX/y1r+LKHDqiIoHou+BCFSc5MUasKNCgxhAI2BBxxr7jWJzHWhC0tJhsMat9jGRFDiI4MRh1\nGDGIFSIGm2UYQHsLMCnaSp9X5IxVQdt6NC+wamit8L//+3/ju9/6zzjnOBy3vHJwzPUtx5VMeeTK\nJo8+fhUFmqZhXGc8Mqop5Qgjhhf24Fu/8TV2nn6OT376J5LFqCVKgH6idMTpyv1lGGqjYC5eJF0L\ngpxzSSI636CqC1+0KkGy4megk7ruGCQii+PPhtqqwmAwIKKghn/7xZ/noZPX+MijH6BtWz5wxbFr\nYdY27G8UXBm6JIsiNE3D7Ph1Pri/RZ7nWGuZzhru1hO+81+/zSc//RNnrmspZ8twXVas+0HkDdZk\noSrOoiYFArN5g4qlMDlODJY0wHbh5B0GyJ1DOinsB8ZYQGKKALvgIYXi3WeNZTAYsnt0kw2Byb1D\nmpMJdlpxfXdIqOdslUPKwQ6jbAtTQ5x6xoenaN3STGZIG8iMJa/H7G+PaNs2+aIYsQY6t7mcIEYX\n15euI20XxVpYUG8hTgwxy3DO0YaGzGTpJlUWVhVCwOaWKBFDWpeICBYhGkFWzpkGxhJ9SJLjDPPJ\nKQMBEx233hyjzLmyt03btmzbjGbaEKJw/94JvpowPprw3e/f4keff4zxZIL1QrQjmumUuzde5798\n8eeQcpPXjiq+8JUvLyRt1erPWJDogsSLYD0sqFvjABRFsYh0Vm/U2uTo8zx/i0ysytn5AQEW6ycR\nYWAarowyrl5/lE/8lb/GYz/wAsfHxxwfH3Pt2jWm3nBcR6790Me5d+8ek8mEDz12leOjism45Y9u\n3Wc8HjOdTtF5YHZwzMO7+/zZDz/DP/7Zf0Cuy0ChR38vfxyshQVZhMzYLiRNaZLMWlIIbQkaFgPc\n+xQQjDVEFMUQZemjTBe9JURUzCJo+Pa3fgcGO1zdvcaoHMLuBzkavsF3v/8az/3go3z42YfYufoI\nhy/dpXUlBwf3sZnhoSee4vq1JzmZnvC73/kf3L03oTDwwp/6CKPCcqyOjVkkZjallHyfnQCNAmrA\neKIKYi4+7GthQQElCgSVM9bUr8aLogA6KTxnJT1xyHJt1MtMmrm95qdbPXrlZSRYNgebPP38Ryir\nOWU5YFgaSmkZuZIf/UufQtrAtf3HOZqccv3hx3ly/ym2N7bIW4MtR3jgmZ0R2wSKLLKph/imIXiP\ncnZd1kud6sV9T4+1IGhVmmKMi8inz8UtFn/nswtwLtl5dt+7ve+9586dOwwGA27cuMETTzxBnuds\nbG3yvRf/kGI2oRkfcnPs2dvbI8syyrJEas9zjz/N9mbJaDRisGnJxsfM7h9RFMVbvvvtos8H6UVc\nC4lbhKMrSVBUSa7fYkySqaDK6hxUVcxCzVZ9j6HfkcKGZfieNXNMrhzXR9SvRcbj+xydTDgOU67v\n77G3e4Xpi0ccNse8efMNPvH8U4ifM9wcsvfI47zx4vfIywGmCEwHkZdfe5V6DjfDJv/sP/7GIntt\nxXUTzYJpUY2L63gQf7QeBJnkIyQAK+sGawANgGBFkm8BVNJm0gHpHJL8Ur+/HwIVUga8Q/CQuxlv\n3nyVJx99hBu3XuFv/+SnaZqGuq559cX/w97eHuPpmGtPXmV/fx+9fcydoze48b9e5c7xbf7gpdf4\ny3/1E1zZ3ORofEJdwVZVoAJRlYAiRCCeCRhWVeKiWAuCFnkxzvqX89GaqiJw5piLYDXctdZy9epV\n9q5cY5hnPPPMM8S2JYRA27Y89eyzWGvxKHmRQv47o5vceOkVmqbh5u3/y3PPPkRzMsPt7rK/v8/p\ncc39ebvweyGGM/egKzWGfj10UawFQXRFrvQnWUyMEFyyACv2DCmiQNSkZNgkYwr0GQQU070ngJoU\nOFh1OCKz2uGPT9kpC8rhBkWRkqlN0zAd3ycfjVCXY2IgNoHhqOSpP/MRAD788edo28DRwYzf/Z+/\nx8d/+AWM8WjwGNL3ZAJeQKzBKcTok+VIeCDrgTUJEow4pPMuYjMihqCCMwbbR0IrERxGEdtHdRBR\nYncnSytLvsAhiCgllpf+4PfZiJHq+JDqzVt89zu/z3w2I4riNUBsybKC27fvEpuW2tcEAnnuGBQZ\nZe4YDAaUecHOTsmP/8ifI4SCg4MKo/Plemc1zSQsIkmLIE6IcnGS1oKg1Sit1+jVEsJ74Yx1rRwv\nIpA7mLf8yuc/w+vf/m2cV37w+T/NleEm1lrG4zF1XTOfz1M5Adjd3eXGjRsL/9FfS7+ALooiVVRV\n2djY4OGHH6YcDgghvKP8Pqgs91gLibNOsDbFbD2cOReWdn4k9RL0N6xYk6I0VVlEbtHk/IvP/BS7\nopTaoBr4gFiKquCx6w8zP5pRTWeMT6dsPvQQ2UaBm9UEK/i2pqlrHv7gdY6OjxmNRmxsbBBdnzpy\nUNeYwmIURCJOIsNyxBc+91n+1Td/C2sMrUmSHWPoJFYIQbu49H0WxaEGjYLNshStdY5Ue7lwfYZa\nUQt9xm11UWqN7eRE+LV/9DM8vXHMdj7ANi2xEfb3d9jev8K8PuXwaMbB6SGvHt7i6OQGLn8IpymU\nJysxWIxz7D78CAC3T+6z43LKssTkjkaVTATJPO2sZpA5Htq0/IUfeBrvIiYYbMqdg3EE9aiCWIcG\nRd9v9SBYJkxXJWVVts5L2Hm5iDFiXLrx3egpioI8yyk2R+RasLWzw+npKVloqeua4/mUn/rpz7Gx\n6Xj99VfZzgcMh1toUWAHBdY5PKkU8sHrTxDmp1RVRXV/wmA4XFynMWbRe7A9GDF0OfPg33JvwJkc\n40WxFgQZ6IIBXQQDKrKskqqhX4hqoCOiJ82s/J/kcNPM2dndoG1brj32GLOTKZPpGBssRpQGz3Bn\ni9HQkFnHlf3rVFXF8WRMmJyydfUK5XATaX0qjwdwo11Gg23Kds6kmjG5d0g7G+NsTtu2hGAx8ZT5\nrEn9E10/AjHiWZlQIb7/JG6Zr1oWu/q/52fbe70GFg78ox/9KN978fuMyBnajMl0yrg6YRIafvyT\nf5FMhThvGAwG5HnOZFwh7YzZbIZGgzOWPM8ZbYyYt/NUGveGPM/Z29tjPsqRRmnblvlJxWw262pA\nZqEG/TU+6AK1x1pEcT1Wc1TWpbW4ns9tCdCt0llpPEx1o7RGskVga1hShzk//EMf58nnn2bj0SvE\nhyyT0PCxj32M2NaEusbECHUgi4bR1ibiMgqTM9gYUZQ5PrTcuv06Rj2ZURCPiYrkjtwNsK6g9Uq5\nscm1ax9kPp11N2AWW+9TrRhiLpgHGPW1IEglkRFWsr3SSZx9F71Oi9qzsNZSiqEoNtnKt8miRccV\ngyDsDofcPzygrY5TuOwyMmMRZ/EacQbyckBEqGcVISouyxkNRkxOD/HNjFBXaNugbQMiBO+xXcep\nrSv+09e+lpovURwKREQjhrQuM2qID5BJWA+CVgpyb7fvnfB2BbpeFsuyTInXYUFZllRVxcsvv0xV\nVWxsbFCW5aJ7KMtS5TaEwGAwwHedof258zxnMEjrHO89bdsSY0ydooVDC7e4npdeemnxP7y1WPeg\nQcJaENTDSZKDPM87R9pL2RKiKWILIXTRU9oW7U4uNRy6aJBWGd+5z3Q+xRWOD33oQ9ioGFtgbEoh\nEVMmwrjUVmzUsDXaopnXiKTsus1ylG4zgmjENzVIZDqd0jQNRiMVc8osSW3UrkWMvhaVmhaJeiZ5\n+15YC4J6B6oEDBGiX7xvjMEQFxsSu1LEaiJyGVy0bdu9HzAGhsMhzmTkrqCUIT/253+MzY0dhGyR\nPNW2RUJIvdjqyXJLjBCbhtgkOcusgRiQELE2I8sKaBUXFRtS1jpnQNn1SEQrBJOKkSoR7d4XC/p+\nS/U8aCvSqrSdj/j6psb5fE5d16gqZbHNcLALwDPPPJOy1d4zHo+ZTCZUVbVoou8rtLu7u8kyOgmM\nMWKtZTAYLApzfcN/X/ntJXBVqv+4vQg91iLM7nNYpuvy7Ac9diUeY7oI7Vwi8uTkhO3tbVQDfSuT\n9x6NMJ1OkwSajGKUBnFnf5+sGCQfVeTEmPxJ27ZEH5kdn2IHBVmWGuglAF6ZtzOsiRACo61tjo6O\nsEGZ13PausE3LcF7Km0YbWxhnRBiyqgHCRjSus3rUhkuirUgKPWOdesh023a1Q9WsAipu9db2xsr\ne5c+qAHysmBazbCbW2At89MJWztXFrWYlPsz+BiwseubixExqTwQo6Eoc4wVNBpil51o6gppW3yM\n+NgCQtv6RNQ8cHh8lJpEWDqaXuLgwbt71kLizmeN326B2uN8VLf6upeauURO2zm1UebzOTrIMcOC\nmC8fEpNhkeSvLFNaKM8ZDofpeaQ8ZzweL2QQlrPee78IUvoseO/7vPdUVbVUgJVm+lUpfpCehLUh\nCEAJC/3unwwQEdS3yxtTJaqmZ3OinBmA/tGOZv9ZTmc1BycTTuZjTu7c60oEwriaMdzaTN2ngwEU\nBbbMCF2/tGkCUnu2RkMQA2IYT04gQGhCKhR20Jhkbz6dUs8qZr7hRz71KbwoEgNGz7b9rpJ0UawF\nQYpJYamaxXokdvflvUfEklrLujVPT9TKDAUWIexP/r1fYDIfMKvmTMYzTmYnePF4WsIA2LBkxWjR\nQdS27SI9ZDXiUDIjGCOoRqTR5Gdaz3wypYkN0USyLKONgXnbULcB3yif/fzPnb230E2+rpnkQX9d\nbC0I6rE62853Z8Lby0P/3ipZtVH+1q98jTsnFePxmKZpmEwmC2lSVWJuaS2YYYEMchpz9ty9JYsI\nw+GQpmkAFl1HfQ9Db+Vt2zL2NdXbZDdWr/HtFuPvhrUgaFG2JhBiJMS4aP7TrkvmrDzEVOc/d47+\nPEYNkxj5m1/6KnfHDbfuHnH38B6nsynzGJl1vqUcbSOuxGRDbD7CDkqCzQg2S+srH7AK5XCwyExo\nFHLJ8FWLr1qaak49q2h8ANlAs/QwsxfFiy5qVD1JIpYQ3m8SFyLE9PAtqjR1TfANIbTdFpZbl2IJ\nIeBX3tcQU5N8TDM1CwEl49Nf+tfcO/W8eeM+N27fZHx0j8O7N2mbCbPZnIODI6KxzJoWbwymLKg1\n4n3EZIYokWZek2UFdZ0eBtYmEuYejX6x9plL5PdeeYMmKtEnOQxt2t9Lafrfcz478m5YC4L6IKHP\nb/VysioN/fZOjnYRaOjKw7+qFN7yN/75V/mjO4ccHh5ycHDAwcEB0+mU03aO3RgkayrLxXf0EgYs\nFrt9lNandvrrrKqKuq6ZnLZsbm4uvrvHmSBm5V4uirUgSDUQQotKJKqSF8UZQiQmWVMNaPRvCQ76\nCC4FVbp4dD54Jfloy9/98td5/eCUO7duMx1POJ0eMz26y+z4HlFaxEWGO1vgLHXwSG7wGimGAybt\nhHmoyI1iRZidjvHzmtAEvA+ctjXT1vNvfuubKH6ZuloJt9PruLT0C2ItFqoYYd7UWJe6DWKMuMyk\nPrMu+ukXeaqCdBHWahcqMTVwiAgaUwic/o8YH4kU/PSX/gO/+Yt/hzoEZtWEvb09tra2qKucInPc\nPLhDmZXUvsXXEybjE3Z3d9Eo+MmEmXOEqqauK+bzijYo03pOG9OjmsfTKU7BrzzFHYJHY0C6H8ho\nCfgHyMWtBUHe++WT15J+yCLJQBr8PuWTMgVmEWL3DwCfT+Gvil8iNQ3IVAw/8+tf55v/8POor3HO\nUdc1w40B4f6MphXGzZj5fI6lZTQsmU6n1PMW57s+g8YTfaCqEkExRuq65vZReFspUzkbwZ2XwPfC\nWhCk0SPGEALpiTlseoamyyx4Eei6M4O2GLGoQhtS+cF7j8szbLdEElLDoAKyovdZA54hn/2X/45v\n/OLnads3GQ6HbGxsLBo6MldQVRX7ezvM5jOm0ykFjumsSoRWDc20oqoqZk3gZFJzFCK3qpqWQOwm\nQ9CAomhcLgFCCISm7ST7YlgLgvrftQnBLRoD1QdEQmcdHpHlE3dp8SoUmRDFoCjz0OL8svzd15YC\n6Ynv/jtEhAbLX//5r/D1f/oZtgdzRuUBzjk+cGUXZyM7Ozucnt7FKLR1TZAcyR3ztqFqpkyqitPT\nU05mDQdzSysFv/qN30Rbj8aIR88EAq33KUWknhhCilYviLUgqP+9gt70+8G01qxIGIsFYU/UzDc4\nSZXPAEjnlI0xzCWiIbX+smhKkUXZYOzrldJEzWAwoK5rBttDptMpZSb4NgUk83pGoOvdPh0zninH\nJ1MOJi3jCsotQygcbZssyOhyodtLm/ee1jeLe7go5EFTD5f4/4u1CLMv8c64JGjNcUnQmuOSoDXH\nJUFrjkuC1hyXBK05Lglac1wStOa4JGjNcUnQmuOSoDXHJUFrjkuC1hyXBK05Lglac1wStOa4JGjN\ncUnQmuOSoDXHJUFrjkuC1hyXBK05/h87yD5t8olejwAAAABJRU5ErkJggg==\n"},"metadata":{}},{"name":"stdout","text":"shape: (480, 640, 3), min: 0, max: 255\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<matplotlib.figure.Figure at 0x7f9ef4586438>","image/png":"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\n"},"metadata":{}},{"name":"stdout","text":"shape: (480, 640, 3), min: 0, max: 219\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<matplotlib.figure.Figure at 0x7f9ef45505f8>","image/png":"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\n"},"metadata":{}},{"name":"stdout","text":"shape: (480, 640, 3), min: 0, max: 238\n","output_type":"stream"}]},{"cell_type":"code","source":"# Get the unique labels \nunique_labels = set(labels)\n\n# Initialize the figure\nplt.figure(figsize=(15, 15))\n\n# Set a counter\ni = 1\n\n# For each unique label,\nfor label in unique_labels:\n    # You pick the first image for each label\n    image = images[labels.index(label)]\n    # Define 64 subplots \n    plt.subplot(8, 8, i)\n    # Don't include axes\n    plt.axis('off')\n    # Add a title to each subplot \n    plt.title(\"Label {0} ({1})\".format(chr(label), labels.count(label)))\n    # Add 1 to the counter\n    i += 1\n    # And you plot this first image \n    plt.imshow(image)\n    \n# Show the plot\nplt.show()","metadata":{"_uuid":"4889b845424a2ec1a1f8dece124a25b95e0c471b","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":"# Feature Extraction","metadata":{"_uuid":"169f344f27a86f7f45e02eb00590a386cdbba222"}},{"cell_type":"code","source":"# Resize images\nimages32 = [transform.resize(image, (28, 28,3)) for image in images]\nimages32 = np.array(images32)","metadata":{"_uuid":"b8fc021f5daee4e78b9ebde9906337687ddc1001","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"# Image Conversion to Grayscale","metadata":{"_uuid":"dcba638eabbaa9d08e545e02884ec05b1749e03a"}},{"cell_type":"code","source":"images32 = rgb2gray(np.array(images32))","metadata":{"_uuid":"1c01d4099c056b261afaff7ca2407810750c64bf","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"for i in range(len(hand_signs)):\n    plt.subplot(1, 4, i+1)\n    plt.axis('off')\n    plt.imshow(images32[hand_signs[i]], cmap=\"gray\")\n    plt.subplots_adjust(wspace=0.5)\n    \nplt.show()\n\nprint(images32.shape)","metadata":{"_uuid":"84c0b75917f5a8789f9d482b421522812a9d3da4","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":"# Model","metadata":{"_uuid":"f5b94ef4a91319c158b69e07d2e1c919b2454aae"}},{"cell_type":"code","source":"x = tf.placeholder(dtype = tf.float32, shape = [None, 28, 28])\ny = tf.placeholder(dtype = tf.int32, shape = [None])\nimages_flat = tf.contrib.layers.flatten(x)\nlogits = tf.contrib.layers.fully_connected(images_flat, 100, tf.nn.relu)\nloss = tf.reduce_mean(tf.nn.sparse_softmax_cross_entropy_with_logits(labels = y, logits = logits))\ntrain_op = tf.train.AdamOptimizer(learning_rate=0.001).minimize(loss)\ncorrect_pred = tf.argmax(logits, 1)\naccuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))\n\nprint(\"images_flat: \", images_flat)\nprint(\"logits: \", logits)\nprint(\"loss: \", loss)\nprint(\"predicted_labels: \", correct_pred)","metadata":{"_uuid":"fcae44cbf83cc66cd2c663eb900981c61b13a5b2","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"sess = tf.Session()\n\nsess.run(tf.global_variables_initializer())\n\nfor i in range(201):\n        print('EPOCH', i)\n        _, accuracy_val = sess.run([train_op, accuracy], feed_dict={x: images32, y: labels})\n        if i % 10 == 0:\n            print(\"Loss: \", loss)\n        print('DONE WITH EPOCH')","metadata":{"_uuid":"862b1539d00da068480f13564b88e4c33dda2305","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":"# Evaluation","metadata":{"_uuid":"1c0b468794802a2b5acbd8f93a6c974e80052289"}},{"cell_type":"code","source":"# Pick 10 random images\nsample_indexes = random.sample(range(len(images32)), 10)\nsample_images = [images32[i] for i in sample_indexes]\nsample_labels = [labels[i] for i in sample_indexes]\n\n# Run the \"predicted_labels\" op.\npredicted = sess.run([correct_pred], feed_dict={x: sample_images})[0]\n                        \n# Print the real and predicted labels\nprint(sample_labels)\nprint(predicted)","metadata":{"_uuid":"5efdc43b9a16979141ce039d09545bb0aee993bd","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"# Display the predictions and the ground truth visually.\nfig = plt.figure(figsize=(10, 10))\nfor i in range(len(sample_images)):\n    truth = sample_labels[i]\n    prediction = predicted[i]\n    plt.subplot(5, 2,1+i)\n    plt.axis('off')\n    color='green' if truth == prediction else 'red'\n    plt.text(40, 10, \"Truth:        {0}\\nPrediction: {1}\".format(chr(truth), chr(prediction)), \n             fontsize=12, color=color)\n    plt.imshow(sample_images[i],cmap='gray')\n\nplt.show()","metadata":{"_uuid":"769c6ba77fedc0c1ce48088fad9199922238eed0","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"\n","metadata":{"_uuid":"9517faf054167e5acc2444d2bdfad75ad3519284","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"f7ca52ad5e187eac214b08732dad8f34964879f5","collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"sess.close()","metadata":{"_uuid":"58805f1f863e72e09cc7ce93de9d1973767dfc30","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"53d254cd0127adccef15212fc860822254b96f13","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"c820f466526c1dfbf8f6e122b3e021fe1041e48e","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"7bd2b7177889e7fa894262a28a02d6a1f41c178a","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"7a03bae32685e7f8a0ebdbc4faf61ae5cf1a7d52","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"3bd254ef149459ba64ba77fcbf8642b376596238","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"cf450018ce2d869346975d3b6b285cad8f87a5b1","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"_uuid":"7858dc9f81744d8244d5ff3ce822e24962348035","collapsed":true,"jupyter":{"outputs_hidden":true}},"execution_count":null,"outputs":[]}]}